{"version":3,"sources":["components/NavBar.js","components/SearchBar.js","helpers/decimalToBinary.js","components/TrueTable.js","pages/About.js","pages/ConversorScreen.js","pages/EquationScreen.js","routes/Router.js","index.js"],"names":["NavBar","className","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","to","activeClassName","SearchBar","submitCallback","onChangeCallback","extra","placeholder","onSubmit","onChange","POWER2","decimalToBinary","decimal","size","binary","i","length","push","TrueTable","trueValues","Object","values","nVariables","Math","log2","variables","String","fromCharCode","map","variable","key","value","index","About","target","href","e","preventDefault","min","max","JSON","stringify","ConversorScreen","useState","conversorData","setConversorData","handleConversor","a","fetch","input","response","json","output","EquationScreen","equationData","setEquationData","equation","method","headers","body","encodeURIComponent","then","res","MainRouter","basename","process","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.46106da8.chunk.js","sourcesContent":["import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nexport const NavBar = () => {\r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n            <div className=\"container-fluid\">\r\n                <a className=\"navbar-brand\">Deber</a>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                        <li className=\"nav-item\">\r\n                            <NavLink \r\n                                className=\"nav-link\" \r\n                                aria-current=\"page\"\r\n                                to=\"/equation\"\r\n                                activeClassName=\"active\"\r\n                            >\r\n                                Ecuación\r\n                            </NavLink>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <NavLink \r\n                                className=\"nav-link\" \r\n                                aria-current=\"page\"\r\n                                to=\"/conversor\"\r\n                                activeClassName=\"active\"\r\n                            >\r\n                                Conversor\r\n                            </NavLink>\r\n                        </li>\r\n                    </ul>\r\n                    <ul className=\"navbar-nav\">\r\n                        <NavLink \r\n                            className=\"d-flex nav-link\" \r\n                            aria-current=\"page\"\r\n                            to=\"/about\"\r\n                            activeClassName=\"active\"                            \r\n                        >\r\n                            ¿Cómo se hizo?\r\n                        </NavLink>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst SearchBar = ({submitCallback, onChangeCallback, extra, placeholder}) => {\r\n    return (\r\n        <form \r\n            className=\"d-flex flex-column\"\r\n            onSubmit={submitCallback}\r\n        >\r\n            <input \r\n                className=\"form-control me-2\"\r\n                placeholder={placeholder}\r\n                {...extra}\r\n                onChange={onChangeCallback}\r\n            />\r\n            <br/>\r\n            <button \r\n                className=\"btn btn-success ml-5 mr-5\" \r\n                type=\"submit\"\r\n            >\r\n                Calcular\r\n            </button>\r\n        </form>\r\n    );\r\n}\r\n\r\nSearchBar.propTypes = {\r\n    submitCallback: PropTypes.func.isRequired,\r\n    onChangeCallback: PropTypes.func.isRequired,\r\n    extra: PropTypes.object\r\n}\r\n\r\nexport default SearchBar;\r\n","const POWER2 = [128, 64, 32, 16, 8, 4, 2, 1];\r\n\r\n/**\r\n * \r\n * @param {number} binary \r\n * @param {number} size \r\n */\r\nexport const decimalToBinary = (decimal, size)=>{\r\n\r\n    let binary = [];\r\n\r\n    for(let i=POWER2.length-size; i<POWER2.length; ++i) {\r\n\r\n        if(POWER2[i] <= decimal) {\r\n            binary.push(\"1\");\r\n            decimal -= POWER2[i];\r\n        }\r\n        else {\r\n            binary.push(\"0\");\r\n        }\r\n    }\r\n\r\n    return binary;\r\n}","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { decimalToBinary } from '../helpers/decimalToBinary';\r\n\r\nconst TrueTable = ({trueValues}) => {\r\n\r\n    trueValues = Object.values(trueValues);\r\n\r\n    const nVariables = Math.log2(trueValues.length);\r\n    let variables = [];\r\n\r\n    for(let i=0; i<nVariables; ++i) {\r\n        variables.push(String.fromCharCode(65+i));\r\n    }\r\n\r\n    return (\r\n        <table className=\"true-table\">\r\n            <thead>\r\n                <tr>\r\n                    {\r\n                        variables.map((variable, key)=><th key={key}>{variable}</th>)\r\n                    }\r\n                    <th className=\"table-response\">R</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {\r\n                    trueValues.map((value, index)=>(\r\n                        <tr key={\"tr-\"+index}>\r\n                            {\r\n                                decimalToBinary(index, nVariables).map((i, key)=>{\r\n                                    return(\r\n                                    <td key={key}>{i}</td>\r\n                                    )\r\n                                })\r\n                            }\r\n                            <td className=\"table-response\">{value}</td>\r\n                        </tr>\r\n                    ))\r\n                }\r\n            </tbody>\r\n        </table>\r\n    );\r\n}\r\n\r\nTrueTable.propTypes = {\r\n    trueValues: PropTypes.object.isRequired\r\n}\r\n\r\nexport default TrueTable;\r\n","import React from 'react'\r\nimport { NavBar } from '../components/NavBar'\r\nimport SearchBar from '../components/SearchBar'\r\nimport TrueTable from '../components/TrueTable'\r\n\r\nexport const About = () => {\r\n    return (\r\n        <div className=\"container mt-5\">\r\n            <h1>Laboratorio | ¿Cómo se hizo?</h1>\r\n            <hr/>\r\n            Para la realización de esta tarea, además de Javascript, HTML5 y CSS3, se usaron las siguientes tecnologías, \r\n            para la creación de un servicio de operaciones binarias escrito en Node.js, y un cliente que lo consume escrito\r\n             en React.js, comunicándose mediante una API rest:<br/>\r\n            <br/>\r\n            <ol>\r\n                <li><b>React</b>: Creación del cliente.</li>\r\n                <li><b>Node</b>: Creación del servicio.</li>\r\n                <li><b>Express</b>: Creación de la API.</li>\r\n                <li><b>Bootstrap</b>: Diseño de interfaz.</li>\r\n                <li><b>React-Router-DOM</b>: Enrutamiento de la aplicación web</li>\r\n            </ol>\r\n            <h3>Servicio</h3>  \r\n            <b>Repositorio GitHub: <a target=\"_blank\" href=\"https://github.com/JoelGarcia99/UNIR-deber-servicio\">Click aquí</a></b>\r\n            <br/><br/>\r\n            <span>\r\n                El servicio creado permite al cliente crear una tabla de verdad a partir de una ecuación booleana \r\n                que se deberá ingresar en forma de productos notables, es decir, no debe haber nada factorado; un \r\n                ejemplo de una ecuación correcta sería <b>AB+AB'+AC</b>, y no sería correcto escribirla de la siguiente \r\n                forma <b>A(B+B'+C).</b> La negación se realizará mediante el uso de un apóstrofe (') que se ubicará \r\n                justo después de la variable a negar. Este servicio también permite convertir de binario a decimal \r\n                (no implementado en el cliente) y de decimal a binario.\r\n            </span><br/><br/>\r\n            <span>\r\n                Como ya se mencionó, para la creación de este servicio se utilizó Node.js junto con Express; esto \r\n                debido a que Node y Express permiten incorporar paquetes al proyecto de una forma bastante ágil, \r\n                además de que cuenta con mucho soporte. Algunos de los paquetes utilizados fueron el de <i>body-parser</i>&nbsp;\r\n                que sirve para leer peticiones POST con estructura x-www-endoded; y tambén se usó el paquete de <i>CORS</i> \r\n                que permite permitir peticiones al backend desde cualquier dirección, incluida el localhost.<br/><br/>\r\n                La interfaz de uso completa de este servicio se encuentra en el <a target=\"_blank\"\r\n                href=\"https://github.com/JoelGarcia99/UNIR-deber-servicio/blob/main/README.md\">\r\n                    README</a> de repositorio del proyecto.\r\n            </span>\r\n            <br/><br/><h3>Cliente</h3>\r\n            <b>Repositorio GitHub: <a target=\"_blank\" href=\"https://github.com/JoelGarcia99/UNIR-servicio-front\">Click aquí</a></b>\r\n            <br/><br/>\r\n            En la parte del cliente se optó por un enfoque basado en componentes, llegando a tener 3 componentes \r\n            (sin contar los componentes que vienen por defecto en React y React-Router-DOM):\r\n            <ul>\r\n\r\n                <li><b>Barra de búsqueda: </b>Recibe varios parámetros, entre los que se encuentran: <i>\r\n                submitCallback, onChangeCallback, extra, placeholder</i>, donde <i>extra</i> es un \r\n                objeto literal en donde se puede poner un número ilimitado de propiedades HTML al \r\n                componente. Una implementación del componente sería la siguiente: <br/><br/>\r\n                <pre>\r\n                    <code>\r\n                    {\r\n                        \"<SearchBar\"+\r\n                        \"\\n\\tonChangeCallback={null}\"\r\n                        +\"\\n\\tsubmitCallback={(e)=>e.preventDefault()}\"\r\n                        +\"\\n\\tplaceholder=\\\"Solo números entre 0 y 10\\\"\"\r\n                        +\"\\n\\textra={{type:\\\"number\\\", min:0, max:10}}\"\r\n                        +\"\\n/>\"\r\n                    }\r\n                    </code>\r\n                </pre>\r\n                Con la implementación anterior obtendremos el siguiente resultado:<br/><br/>\r\n                <SearchBar\r\n                    onChangeCallback={null}\r\n                    submitCallback={(e)=>e.preventDefault()}\r\n                    placeholder=\"Solo números entre 0 y 10\"\r\n                    extra={{type:\"number\", min:0, max:10}}\r\n                />\r\n                <br/>\r\n\r\n                </li>\r\n\r\n                <li><b>Tabla de verdad: </b>Este componente posee un solo parámetro, <i>trueValues</i>, que son los \r\n                valores de verdad de la tabla, y él mismo se encargará ya de generar todas las combinaciones de 0 y 1 \r\n                que conforman la tabla de verdad; así, si le pasamos los valores de <i>\r\n                    {JSON.stringify({\r\n          \"0\": 0,\r\n          \"1\": 1,\r\n          \"2\": 1,\r\n          \"3\": 1\r\n     })}</i>, este componente generará la siguiente tabla: <br/><TrueTable trueValues={{\r\n        \"0\": 0,\r\n        \"1\": 1,\r\n        \"2\": 1,\r\n        \"3\": 1\r\n   }} /></li>\r\n                <li><b>NavBar:</b> La barra de búsqueda, que no necesita nigún parámetro para su implementación \r\n                puesto que utiliza las rutas que hayamos definido. El componente luce de la siguiente manera: <br/>\r\n                <NavBar /></li>\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport SearchBar from '../components/SearchBar';\r\n\r\nexport const ConversorScreen = () => {\r\n\r\n\r\n    const [conversorData, setConversorData] = useState({\r\n        \"input\": \"\"\r\n    });\r\n\r\n    const handleConversor = async(e)=>{\r\n        e.preventDefault();\r\n        \r\n        let response = await fetch(`https://laboratorio-unir.herokuapp.com/conversor/decimalToBinary?value=${conversorData.input}`);\r\n        response = await response.json();\r\n        \r\n        setConversorData({...response, input: conversorData.input});\r\n    }\r\n\r\n    return (\r\n        <div className=\"container mt-5\">\r\n            <h3>Conversor decimal - Binario</h3>\r\n            <hr/>\r\n            <div \r\n                className=\"d-flex main-container\"\r\n            >\r\n                <div className=\"d-flex flex-column col-md-5\">\r\n                    <SearchBar\r\n                        onChangeCallback={({target})=>setConversorData({...conversorData, input: target.value})}\r\n                        submitCallback={handleConversor}\r\n                        placeholder=\"Escriba un valor decimal\"\r\n                        extra={{type:\"number\", min:0, max:65536}}\r\n                    />\r\n                    <br/><br/>\r\n                    <h4>Salida en bruto de la API</h4>\r\n                    <pre className=\"raw-data\">\r\n                        {JSON.stringify(conversorData, null, 5)}\r\n                    </pre>\r\n                </div>\r\n                <div className=\"d-flex col-md-5 response-container conversor\">\r\n                    <h1>{conversorData.output}</h1>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState } from 'react';\r\nimport SearchBar from '../components/SearchBar';\r\nimport TrueTable from '../components/TrueTable';\r\n\r\nexport const EquationScreen = () => {\r\n\r\n    const [equationData, setEquationData] = useState({});\r\n\r\n    const handleSearch = (e)=>{\r\n        e.preventDefault();\r\n        \r\n        fetch('https://laboratorio-unir.herokuapp.com/trueTable/', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/x-www-form-urlencoded'\r\n          },\r\n          body: [`equation=${encodeURIComponent(equationData.equation)}`]\r\n        }).then(async(value)=>{\r\n            let res = await value.json();\r\n            setEquationData({...res, equation: equationData.equation});\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className=\"container mt-5\">\r\n            <h2>Ecuación booleana a tabla de verdad</h2>\r\n            <hr />\r\n            <div \r\n                className=\"d-flex main-container\"\r\n            >\r\n                <div className=\"d-flex flex-column col-md-5\">\r\n                    <SearchBar\r\n                        placeholder=\"Escriba una ecuación. Ejemplo: A'B+CDA\"\r\n                        onChangeCallback={({target})=>{\r\n                            setEquationData({...equationData, equation:target.value})\r\n                        }}\r\n                        submitCallback={handleSearch}\r\n                    />\r\n                    <br/>\r\n                    <h4>Salida en bruto de la API</h4>\r\n                    <pre className=\"raw-data\">\r\n                        {JSON.stringify(equationData, null, 5)}\r\n                    </pre>\r\n                </div>\r\n                <div className=\"d-flex col-md-5 response-container\">\r\n                    {\r\n                        !equationData.output?<div></div>:<TrueTable trueValues={equationData.output}/>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n","import React from 'react'\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\r\nimport { NavBar } from '../components/NavBar'\r\nimport { About } from '../pages/About'\r\nimport { ConversorScreen } from '../pages/ConversorScreen'\r\nimport { EquationScreen } from '../pages/EquationScreen'\r\n\r\nexport const MainRouter = () => {\r\n    return (\r\n        <div>\r\n            <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n            <NavBar />\r\n            <Switch>\r\n                <Route exact path=\"/equation\" component={EquationScreen}/>\r\n                <Route exact path=\"/conversor\" component={ConversorScreen}/>\r\n                <Route exact path=\"/about\" component={About}/>\r\n            </Switch>\r\n            </BrowserRouter>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { MainRouter } from './routes/Router';\n\nimport './index.css';\n\nReactDOM.render(\n  <MainRouter />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}